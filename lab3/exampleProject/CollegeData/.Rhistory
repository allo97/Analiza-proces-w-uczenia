install.packages("ISLR")
library(ISLR)
print(head(College,2))
print(head(College,2))
# Create Vector of Column Max and Min Values
maxs <- apply(College[,2:18], 2, max)
mins <- apply(College[,2:18], 2, min)
# Use scale() and convert the resulting matrix to a data frame
scaled.data <- as.data.frame(scale(College[,2:18],center = mins, scale = maxs - mins))
# Check out results
print(head(scaled.data,2))
print(head(College,5))
print(head(College))
Private = as.numeric(College$Private)-1
data = cbind(Private,scaled.data)
print(head(scaled.data,2))
# Convert Private column from Yes/No to 1/0
Private = as.numeric(College$Private)-1
data = cbind(Private,scaled.data)
# Convert Private column from Yes/No to 1/0
Private = as.numeric(College$Private)-1
data = cbind(Private,scaled.data)
print(head(scaled.data,2))
library(caTools)
set.seed(101)
install.packages("caTools")
library(caTools)
set.seed(101)
# Create Split (any column is fine)
split = sample.split(data$Private, SplitRatio = 0.70)
print(head(data,2))
# Split based off of split Boolean Vector
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
View(test)
View(data)
View(data)
View(scaled.data)
View(test)
View(train)
feats <- names(scaled.data)
# Concatenate strings
f <- paste(feats,collapse=' + ')
f <- paste('Private ~',f)
# Convert to formula
f <- as.formula(f)
f
f
f <- paste(feats,collapse=' + ')
f <- paste('Private ~',f)
f <- as.formula(f)
#install.packages('neuralnet')
library(neuralnet)
nn <- neuralnet(f,train,hidden=c(10,10,10),linear.output=FALSE)
install.packages('neuralnet')
library(neuralnet)
nn <- neuralnet(f,train,hidden=c(10,10,10),linear.output=FALSE)
# Compute Predictions off Test Set
predicted.nn.values <- compute(nn,test[2:18])
View(predicted.nn.values)
View(nn)
View(predicted.nn.values)
# Check out net.result
print(head(predicted.nn.values$net.result))
predicted.nn.values$net.result <- sapply(predicted.nn.values$net.result,round,digits=0)
View(predicted.nn.values)
table(test$Private,predicted.nn.values$net.result)
plot(nn)
View(data)
nn <- neuralnet(f,train,hidden=c(5,5,5),linear.output=FALSE)
# Compute Predictions off Test Set
predicted.nn.values <- compute(nn,test[2:18])
# Check out net.result
print(head(predicted.nn.values$net.result))
predicted.nn.values$net.result <- sapply(predicted.nn.values$net.result,round,digits=0)
table(test$Private,predicted.nn.values$net.result)
plot(nn)
View(data)
test[2:18]
#install.packages('ISLR')
library(ISLR)
College
View(scaled.data)
plot(nn)
View(train)
myData <- data.frame(College)
College
library(ISLR)
print(head(College))
College
myData <- data.frame(College)
View(myData)
View(train)
#install.packages('ISLR')
library(ISLR)
print(head(College))
College
# Create Vector of Column Max and Min Values
maxs <- apply(College[,2:18], 2, max)
mins <- apply(College[,2:18], 2, min)
# Use scale() and convert the resulting matrix to a data frame
scaled.data <- as.data.frame(scale(College[,2:18],center = mins, scale = maxs - mins))
# Check out results
print(head(scaled.data,2))
# Convert Private column from Yes/No to 1/0
Private = as.numeric(College$Private)-1
data = cbind(Private,scaled.data)
# Print data with changed Private to numeric values
print(head(data,2))
library(caTools)
set.seed(101)
# Create Split (any column is fine)
split = sample.split(data$Private, SplitRatio = 0.70)
# Split based off of split Boolean Vector
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
feats <- names(scaled.data)
# Concatenate strings
f <- paste(feats,collapse=' + ')
f <- paste('Private ~',f)
# Convert to formula
f <- as.formula(f)
library(neuralnet)
nn <- neuralnet(f,train,hidden=c(5,5,5),linear.output=FALSE)
plot(nn)
View(nn)
print(head(predicted.nn.values$net.result))
# Compute Predictions off Test Set
predicted.nn.values <- compute(nn,test[2:18])
# Check out net.result
print(head(predicted.nn.values$net.result))
predicted.nn.values$net.result <- sapply(predicted.nn.values$net.result,round,digits=0)
table(test$Private,predicted.nn.values$net.result)
#install.packages('ISLR')
library(ISLR)
print(head(College))
College
# Create Vector of Column Max and Min Values
maxs <- apply(College[,2:18], 2, max)
mins <- apply(College[,2:18], 2, min)
# Use scale() and convert the resulting matrix to a data frame
scaled.data <- as.data.frame(scale(College[,2:18],center = mins, scale = maxs - mins))
# Check out results
print(head(scaled.data,2))
# Convert Private column from Yes/No to 1/0
Private = as.numeric(College$Private)-1
data = cbind(Private,scaled.data)
# Print data with changed Private to numeric values
print(head(data,2))
library(caTools)
set.seed(101)
# Create Split (any column is fine)
split = sample.split(data$Private, SplitRatio = 0.70)
# Split based off of split Boolean Vector
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
feats <- names(scaled.data)
# Concatenate strings
f <- paste(feats,collapse=' + ')
f <- paste('Private ~',f)
# Convert to formula
f <- as.formula(f)
library(neuralnet)
nn <- neuralnet(f,train,hidden=c(5,5,5),linear.output=FALSE)
plot(nn)
View(nn)
View(train)
print(head(predicted.nn.values$net.result))
