load.Rdata("smartphones.Rda", smartphones)
load.Rdata("smartphones_with_price.Rda", smartphones_with_price)
load("smartphones.Rda", smartphones)
load("smartphones_with_price.Rda", smartphones_with_price)
load("smartphones.Rda")
load("smartphones_with_price.Rda")
load("smartphones.Rda")
load("smartphones_with_price.Rda")
traininginput
View(traininginput)
View(traininginput)
new_row <- c("Samsung Galaxy A20e", 5.8, 3, 32, 13, 749, 42);
traininginput <- rbind(traininginput, new_row)
View(traininginput)
nazwa <- c("Samsung Galaxy S20","Samsung Galaxy A71","Samsung Galaxy A40","Samsung Galaxy A30s","Samsung Galaxy A70",
"Samsung Galaxy A51","Samsung Galaxy S10","Samsung Galaxy A10","Samsung Galaxy S10 Lite","Samsung Galaxy Note10 Lite", "Samsung Galaxy A20e")
wyswietlacz <-c(6.7,6.7,5.9,6.4,6.7,6.5,6.1,6.2,6.7,6.7, 5.8)
pamiec_RAM <-c(8,6,4,4,6,4,8,2,8,6, 3)
pamiec_wbudowana <-c(128,128,64,64,128,128,128,32,128, 128, 32)
aparat_foto <-c(64,64,16,25,32,48,16,13,48,12, 13)
cena <-c(3949, 1999, 999, 849,1499, 1699, 3299,699,2799,2649, 749)
liczba_opinii <-c(7,38,20,21,65,20,77,22,10,8, 42)
traininginput <- data.frame(nazwa, wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, liczba_opinii)
View(traininginput)
save(traininginput, "smartphones.Rdata")
save(traininginput, "smartphones")
save(traininginput, file = "smartphones.Rdata")
head(traininginput, 6)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
crx <- read.table( file=url, header=FALSE, sep="," )
View(crx)
crx <- crx[ sample( nrow( crx ) ), ]
View(X)
View(trainX)
install.packages("C50")
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
model <-  C50::C5.0( trainX, trainy, trials=10 )
summary( model )
# Prediction with class
p <- predict( model, testX, type="class" )
sum( p == testy ) / length( p )
p <- predict( model, testX, type="prob" )
View(p)
sum( p == testy ) / length( p )
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
install.packages("C50")
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model)
install.packages("C50")
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
install.packages("C50")
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model, subtree = 3)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model, subtree = 2)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model, subtree = 1)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model, subtree = 4)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/credit-screening/crx.data"
crx <- read.table( file=url, header=FALSE, sep="," )
write.table( crx, "crx.dat", quote=FALSE, sep="," )
head( crx, 6 )
crx <- crx[ sample( nrow( crx ) ), ]
X <- crx[,1:15]
y <- crx[,16]
trainX <- X[1:600,]
trainy <- y[1:600]
testX <- X[601:690,]
testy <- y[601:690]
library(C50)
model <- C50::C5.0( trainX, trainy )
summary( model )
plot(model, subtree = 1)
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn)
treeModel
summary(treeModel)
tn <- read.csv('Titanic.csv') # load the dataset into an object
head(tn) # view the first six rows of the dataset
tnTree <- C5.0(tn[,-4], tn[,4])
plot(tnTree, main = 'Titanic decision tree') #view the tree
tn <- read.csv('Titanic.csv') # load the dataset into an object
head(tn) # view the first six rows of the dataset
tnTree <- C5.0(tn[,-4], tn[,4])
plot(tnTree, main = 'Titanic decision tree') #view the tree
View(tn)
tn[,-4]
tn[,-3]
tn[,-1]
tn[,-2]
tn[,4]
summary(tnTree)
tnRules <- C5.0(tn[,-4], tn[,4], rules = TRUE)
summary(tnRules) # view the ruleset
wine <- read.csv('Wine.csv') # read the dataset
wine <- read.csv('Wine.csv') # read the dataset
View(wine)
as.factor(wine[,14]
as.factor(wine[,14])
as.factor(wine[,14])
xd <- as.factor(wine[,14])
xd
xdd <- wine[,14]
xdd
wine <- read.csv('Wine.csv') # read the dataset
head(wine) # look at the 1st 6 rows
xdd <- wine[,14]
xd <- as.factor(wine[,14])
wTree <- C5.0(wine[,-14], as.factor(wine[,14])) # train the tree
summary(wTree) # view the model components
plot(wTree, main = 'Wine decision tree') # view the model graphically
# Prognozowanie oceny klientów w skali 5-punktowej
# Data of 11 Samsung Smartphones
nazwa <- c("Samsung Galaxy S20","Samsung Galaxy A71","Samsung Galaxy A40","Samsung Galaxy A30s","Samsung Galaxy A70",
"Samsung Galaxy A51","Samsung Galaxy S10","Samsung Galaxy A10","Samsung Galaxy S10 Lite","Samsung Galaxy Note10 Lite", "Samsung Galaxy A20e")
wyswietlacz <-c(6.7,6.7,5.9,6.4,6.7,6.5,6.1,6.2,6.7,6.7, 5.8)
pamiec_RAM <-c(8,6,4,4,6,4,8,2,8,6, 3)
pamiec_wbudowana <-c(128,128,64,64,128,128,128,32,128, 128, 32)
aparat_foto <-c(64,64,16,25,32,48,16,13,48,12, 13)
cena <-c(3949, 1999, 999, 849,1499, 1699, 3299,699,2799,2649, 749)
liczba_opinii <-c(7,38,20,21,65,20,77,22,10,8, 42)
traininginput <- data.frame(nazwa, wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, liczba_opinii)
View(traininginput)
load(file = "smartphones.Rdata")
load(file = "smartphones.Rdata")
wine <- read.csv('Wine.csv') # read the dataset
head(wine) # look at the 1st 6 rows
xdd <- wine[,14]
xd <- as.factor(wine[,14])
wTree <- C5.0(wine[,-14], as.factor(wine[,14])) # train the tree
summary(wTree) # view the model components
plot(wTree, main = 'Wine decision tree') # view the model graphically
wRules <- C5.0(wine[,-14], as.factor(wine[,14]), rules = TRUE)
summary(wRules) # view the ruleset
View(wine)
traininginput <- data.frame(wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, opinia_klientow)
# Prognozowanie oceny klientów w skali 5-punktowej na podstawie parametrów
# load the package
library('C50')
# Data of 11 Samsung Smartphones
nazwa <- c("Samsung Galaxy S20","Samsung Galaxy A71","Samsung Galaxy A40","Samsung Galaxy A30s","Samsung Galaxy A70",
"Samsung Galaxy A51","Samsung Galaxy S10","Samsung Galaxy A10","Samsung Galaxy S10 Lite",
"Samsung Galaxy Note10 Lite","Samsung Galaxy A20e")
wyswietlacz <-c(6.7,6.7,5.9,6.4,6.7,6.5,6.1,6.2,6.7,6.7, 5.8)
pamiec_RAM <-c(8,6,4,4,6,4,8,2,8,6, 3)
pamiec_wbudowana <-c(128,128,64,64,128,128,128,32,128, 128, 32)
aparat_foto <-c(64,64,16,25,32,48,16,13,48,12, 13)
cena <-c(3949, 1999, 999, 849,1499, 1699, 3299,699,2799,2649, 749)
liczba_opinii <-c(7,38,20,21,65,20,77,22,10,8, 42)
opinia_klientow <- c(4.8, 4.6, 4.7, 4.7, 4.7, 4.8, 4.8, 4.7, 4.9, 4.8, 4.7)
# Uwzględnia wyswietlacz, RAM, pamiec wbudowana, aparat i opinie
traininginput <- data.frame(wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, opinia_klientow)
View(traininginput)
View(wine)
head(traininginput)
# Prognozowanie oceny klientów w skali 5-punktowej na podstawie parametrów
# load the package
library('C50')
# Data of 11 Samsung Smartphones
nazwa <- c("Samsung Galaxy S20","Samsung Galaxy A71","Samsung Galaxy A40","Samsung Galaxy A30s","Samsung Galaxy A70",
"Samsung Galaxy A51","Samsung Galaxy S10","Samsung Galaxy A10","Samsung Galaxy S10 Lite",
"Samsung Galaxy Note10 Lite","Samsung Galaxy A20e")
wyswietlacz <-c(6.7,6.7,5.9,6.4,6.7,6.5,6.1,6.2,6.7,6.7, 5.8)
pamiec_RAM <-c(8,6,4,4,6,4,8,2,8,6, 3)
pamiec_wbudowana <-c(128,128,64,64,128,128,128,32,128, 128, 32)
aparat_foto <-c(64,64,16,25,32,48,16,13,48,12, 13)
cena <-c(3949, 1999, 999, 849,1499, 1699, 3299,699,2799,2649, 749)
liczba_opinii <-c(7,38,20,21,65,20,77,22,10,8, 42)
opinia_klientow <- c(4.8, 4.6, 4.7, 4.7, 4.7, 4.8, 4.8, 4.7, 4.9, 4.8, 4.7)
# Uwzględnia wyswietlacz, RAM, pamiec wbudowana, aparat i opinie
smartphones <- data.frame(wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, opinia_klientow)
head(smartphones)
smartphones[,-5]
smartphones_tree <- C5.0(smartphones[,-5], as.factor(smartphones[,5])) # train the tree
# Zobacz podsumowanie drzewa
summary(smartphones_tree)
# rysuj wykres drzewa
plot(smartphones_tree, main = 'Drzewo wyboru smartfonów')
View(smartphones)
smartphones_tree_rules <- C5.0(smartphones[,-5], as.factor(smartphones[,5]), rules = TRUE)
summary(smartphones_tree_rules) # view the ruleset
# Prognozowanie oceny klientów w skali 5-punktowej na podstawie parametrów
# load the package
library('C50')
# Data of 11 Samsung Smartphones
nazwa <- c("Samsung Galaxy S20","Samsung Galaxy A71","Samsung Galaxy A40","Samsung Galaxy A30s","Samsung Galaxy A70",
"Samsung Galaxy A51","Samsung Galaxy S10","Samsung Galaxy A10","Samsung Galaxy S10 Lite",
"Samsung Galaxy Note10 Lite","Samsung Galaxy A20e")
wyswietlacz <-c(6.7,6.7,5.9,6.4,6.7,6.5,6.1,6.2,6.7,6.7, 5.8)
pamiec_RAM <-c(8,6,4,4,6,4,8,2,8,6, 3)
pamiec_wbudowana <-c(128,128,64,64,128,128,128,32,128, 128, 32)
aparat_foto <-c(64,64,16,25,32,48,16,13,48,12, 13)
cena <-c(3949, 1999, 999, 849,1499, 1699, 3299,699,2799,2649, 749)
liczba_opinii <-c(7,38,20,21,65,20,77,22,10,8, 42)
opinia_klientow <- c(4.8, 4.6, 4.7, 4.7, 4.7, 4.8, 4.8, 4.7, 4.9, 4.8, 4.7)
# Uwzględnia wyswietlacz, RAM, pamiec wbudowana, aparat i opinie
smartphones <- data.frame(wyswietlacz, pamiec_RAM, pamiec_wbudowana, aparat_foto, opinia_klientow)
head(smartphones)
# Trenujemy drzewo
smartphones_tree <- C5.0(smartphones[,-5], as.factor(smartphones[,5]))
# Zobacz podsumowanie drzewa
summary(smartphones_tree)
# rysuj wykres drzewa
plot(smartphones_tree, main = 'Drzewo wyboru smartfonów')
smartphones_tree_rules <- C5.0(smartphones[,-5], as.factor(smartphones[,5]), rules = TRUE)
summary(smartphones_tree_rules) # view the ruleset
